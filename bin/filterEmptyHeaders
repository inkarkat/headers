#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Filter useless headers (generated by the header HEADER command) that immediately
follow each other (i.e. where any CMD executed in between did not output
anything) from standard input. Also removes the initial empty line before the
first header, and condenses trailing empty lines before the next header to a
single empty line and deletes those at the end of the input completely.
HELPTEXT
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-f|--foo bar] [FILE, ...] [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac


: ${HEADER_PREFIX=[01m}
: ${HEADER_SUFFIX=[0m}
: ${HEADER_COLON=:}

literalHeaderPrefix=$(printf %s "$HEADER_PREFIX" | sed -e 's/[][\$*+?{}.|()^]/\\\\&/g')
literalHeaderSuffix=$(printf %s "$HEADER_SUFFIX" | sed -e 's/[][\$*+?{}.|()^]/\\\\&/g')
literalHeaderColon=$(printf %s "$HEADER_COLON" | sed -e 's/[][\$*+?{}.|()^]/\\\\&/g')
awk -v unanchoredHeaderExpr="${literalHeaderPrefix}.+${literalHeaderSuffix}${literalHeaderColon}" '
NR == 1 && $0 == "" {
    next
}
$0 == "" {
    suspect = ""
    while ($0 ~ /^\n*$/) {
	if (getline != 1) {
	    next
	}
	if ($0 ~ "^" unanchoredHeaderExpr "$") {
	    suspect = "\n"
	    break
	}
	suspect = suspect "\n"
    }
    $0 = suspect $0
}
$0 ~ "^\n*" unanchoredHeaderExpr "$" {
    suspect = $0
    while (1) {
	lookahead = ""
	while (lookahead ~ /^\n*$/) {
	    if (getline lookahead != 1) {
		next
	    }
	    if (lookahead == "") {
		suspect = suspect "\n"
	    }
	}
	if (lookahead ~ "\n*" unanchoredHeaderExpr "$") {
	    gsub(/^\n*/, "\n", lookahead)
	    suspect = lookahead
	} else {
	    print suspect
	    print lookahead
	    fflush()
	    next
	}
    }
}
{
    print
    fflush()
}
'
